1.Logic Helpers
<p>
The helpers library comes with the following logic helpers:
</p>
{! {@eq}: strictly equal to !}
{! {@ne}: not strictly equal to !}
{! {@gt}: greater than !}
{! {@lt}: less than !}
{! {@gte}: greater than or equal to !}
{! {@lte}: less than or equal to !}
<p>
{@eq key=level value="master"}You are no longer a Padawan. {/eq}
{@gt key=age value=starfighterRentalAge}Rent a Starfighter!{/gt}
</p><hr />
<p>
{@eq key=level value="master"}
  You are no longer a Padawan.
{:else}
  You have much to learn, young Padawan.
{/eq}
</p><hr />

<p>Else</p>
<p>
{@eq key=level value="master"}
  You are no longer a Padawan.
{:else}
  You have much to learn, young Padawan.
{/eq}
</p><hr />

<p>Casting</p>
<p>
If you are comparing a literal value to one that you know is not a string (e.g. a number or a boolean), make sure to specify the type attribute so Dust knows how to cast the literal value.
</p>
<p>
{@eq key=bilbosAge value="50" type="number"}Looking nifty at fifty, Bilbo! {/eq}
{@gt key=gandalfsAge value="10000"}Gandalf is really old...{/gt}
</p><hr />

<p>Separator Helper</p>
{! Iterating over lists sometimes requires slightly different treatment of the first or last items in the list. 
	The {@sep} helper and its companions {@first} and {@last} provide this functionality. !}
{! {@sep}: Output for every loop iteration except the last !}
{! {@first}: Output only on the first loop iteration !}
{! {@last}: Only output on the last loop iteration !}
{#guests}
  {@first}Hello {/first}
  {@last}and {/last}
  {.}{@sep}, {/sep}
  {@last}!{/last}
{/guests}

<p>Select Helper</p>
{! http://www.dustjs.com/guides/dust-helpers/#logic-helpers !}
<span class="
  {@select key=testEnabled}
    {@any}test-enabled {/any}
    {@none}test-disabled {/none}
    {@eq value="puppies"}test-puppies{/eq}
    {@eq value="bunnies"}test-bunnies{/eq}
  {/select}
">

<p>Math Helper</p>
<ul>
  {#flavors}
    <li
      {@math key=$idx method="mod" operand="2"}	{! 乘 !}
        {@eq value="0" type="number"} class="alt"{/eq}
      {/math}>
      {name}
    </li>{~n}
  {/flavors}
</ul>
{! the output is:
	<ul><li class="alt">red bean</li>
	<li>green tea</li>
	<li class="alt">mango</li>
	<li>peanut</li>
	</ul>
!}

<h5>Printing the Result</h5>
Allowed Operations
Supports these operations as the method:
    add, subtract
    multiply, divide, mod
    ceil, floor, round, toint
    abs
{! 减掉 !}
There is {@math key=100 method="subtract" operand=progress/}% left to do.

。。。。。。。
http://www.dustjs.com/guides/dust-helpers/#logic-helpers




